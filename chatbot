import os 
import nltk
import ssl
import streamlit as st
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression 

ssl._create_default_https_context = ssl._create_unverified_context
nltk.data.path.append(os.path.abspath("nltk_data"))
nltk.download('punkt')

intents = [
    {
        "tag" : "greeting", 
        "patterns": ["hi", "hello", "hey", "how are you", "what's up"],
        "reponses": ["Hi there", "Hello", "Hey", "I'm fine, thank you", "Nothing much"]
    },
    {
        "tag": "goodbye",
        "patterns": ["Bye", "See you later", "Goodbye", "Take care"],
        "reponses": ["Goodbyes", "See you later", "Take care"]

    },
    {
        "tag": "thanks",
        "patterns": ["thanks", "thank you", "appreciate it"],
        "responses": ["You're welcome", "No problem", "Anytime"]
    },
    {
        "tag": "about_bot",
        "patterns": ["who are you", "what are you", "tell me about yourself"],
        "responses": ["I am a chatbot designed to assist you.", "I'm a chatbot here to help.", "I'm just a computer program."]
    },
    {
        "tag": "joke",
        "patterns": ["tell me a joke", "give me a joke", "joke time"],
        "responses": ["Why did the chicken cross the road? To get to the other side!", "What's orange and sounds like a parrot? A carrot!", "Why don't scientists trust atoms? Because they make up everything!"]
    },
]
vectorizer = TfidfVectorizer()
clf=LogisticRegression(random_state=0, max_iter=10000)

tags = []
patterns = []
for x in intents:
    for pattern in x['patterns']:
        tags.append(x['tag'])
        patterns.append(pattern)

x=vectorizer.fit_transform(patterns)
y=tags
clf.fit(x,y)

def chatbot(input_tet):
    input_text = vectorizer.transform([input_text])
    tag=clf.predict(input_text)[0]
    for x in intents:
        if x['tag']==tag:
            response = random.choice(x['responses'])
            return response

counter = 0

def main():
    global counter
    st.title("Chatbot")
    st.write("Welcome to the chatbot. Please type a message and press enter to start the chat.")
    counter += 1
    user_input = st.text_input("You:", key=f"user_input_{counter}")

    if user_input:
        response = chatbot(user_input)
        st.text_aera("Chatbot:", value=response, height=100, max_chars=None, key=f"chatbot_response_{counter}")

        if response.lower() in ['goodbye', 'bye']:
            st.write("Thank you for chatting wiht me. Have a great day!")
            st.stop()
if __name__ == '__main__':
    main()